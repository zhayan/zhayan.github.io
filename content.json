{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"categories","text":"","link":"/categories/index.html"}],"posts":[{"title":"为什么写博客","text":"现状","link":"/2020/04/10/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%86%99%E5%8D%9A%E5%AE%A2/"},{"title":"C&#x2F;C++语法--extern关键字","text":"","link":"/2020/12/22/Cpp%E8%AF%AD%E6%B3%95-extern%E5%85%B3%E9%94%AE%E5%AD%97%E8%AF%A6%E8%A7%A3/"},{"title":"常用知识、技能备忘","text":"SCP 命令参考菜鸟教程. Linux scp 命令用于 Linux 之间复制文件和目录。scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。 常用命令： local2remote.sh12scp local_file remote_username@remote_ip:remote_folder #-P 端口号 -r 整个目录 Python 字符串切割一般用法 12string.split(str, num)#str -- 分隔符 num -- 分割次数 结果为list 对使用不等数量空格分隔符 123string = \"a b c d\"string.split()#['a', 'b', 'c', 'd'] 对使用多种分隔符 12345import restring =\"Beautiful, is; better*than\\nugly\"# 四个分隔符为：, ; * \\nre.split(',|; |\\*|\\n',string)#['Beautiful', ' is', 'better', 'than', 'ugly'] 从后往前分割 123string = \"/home/username/text.txt\"string.rsplit('/',1)#['/home/username', 'text.txt'] sklearn classifier输出置信度1clf.predict_proba(sample) Linux 处理大量文件(xargs)更多参考xargs 命令教程(阮一峰) 用于rm cp 等命令参数过多无法执行 用于多线程同时执行 12345ls | xargs rm #'|'表示将前面命令的输出作为后面命令的输入#对于需要文件夹名称的情况echo dir/* | xarg python a.py # -n {几个分隔的参数做一次命令} -P {最大进程数}#echo 不会因为*参数过多","link":"/2020/04/11/%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86%E3%80%81%E6%8A%80%E8%83%BD%E5%A4%87%E5%BF%98/"},{"title":"面试知识索引--数据结构","text":"","link":"/2020/12/22/%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%B4%A2%E5%BC%95-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"},{"title":"面试知识索引--C++","text":"参考书籍《C++ primer》《effective C++》《STL源码解析》《深度搜索C++对象模型》 语法相关extern关键字extern可以置于变量或者函数前，以标示变量或者函数的定义在别的文件中，提示编译器遇到此变量和函数时在其他模块中寻找其定义。此外extern也可用来进行链接指定。 作用 与”C”一起连用时，如: extern “C” void fun(int a, int b);则告诉编译器在编译fun这个函数名时按着C的规则去翻译相应的函数名而不是C++的，C++的规则在翻译这个函数名时会把fun这个名字变得面目全非，可能是fun@aBc_int_int#%$也可能是别的，这要看编译器的”脾气”了(不同的编译器采用的方法不一样)，为什么这么做呢，因为C++支持函数的重载啊。 ，当extern不与”C”在一起修饰变量或函数时，如在头文件中: extern int g_Int; 它的作用就是声明函数或全局变量的作用范围的关键字，其声明的函数和变量可以在本模块活其他模块中使用，记住它是一个声明不是定义!也就是说B模块(编译单元)要是引用模块(编译单元)A中定义的全局变量或函数时，它只要包含A模块的头文件即可,在编译阶段，模块B虽然找不到该函数或变量，但它不会报错，它会在连接时从模块A生成的目标代码中找到此函数。 STL相关定义C++ STL（标准模板库）是一套功能强大的 C++ 模板类，提供了通用的模板类和函数，这些模板类和函数可以实现多种流行和常用的算法和数据结构，如向量、链表、队列、栈。 C++ 标准模板库的核心包括以下三个组件： 组件 描述 容器（Containers） 容器是用来管理某一类对象的集合。C++ 提供了各种不同类型的容器，比如 deque、list、vector、map 等。 算法（Algorithms） 算法作用于容器。它们提供了执行各种操作的方式，包括对容器内容执行初始化、排序、搜索和转换等操作。 迭代器（iterators） 迭代器用于遍历对象集合的元素。这些集合可能是容器，也可能是容器的子集。 vector（向量）STL中标准而安全的数组。 deque（双端队列 double-ended queue）在功能上和vector相似，但是可以在前后两端向其中添加数据。 list（列表）游标一次只可以移动一步。STL中的list则是一个双向链表（每个节点有指向前驱和指向后继的两个指针）。 set（集合）包含了经过排序了的数据，这些数据的值(value)必须是唯一的。 multiset（多重集）和集合（set）相似，然而其中的值不要求必须是唯一的（即可以有重复）。 map（映射）经过排序了的二元组的集合，map中的每个元素都是由两个值组成，其中的key（键值，一个map中的键值必须是唯一的）是在排序或搜索时使用，它的值可以在容器中重新获取；而另一个值是该元素关联的数值。 multimap（多重映射）和映射（map）相似，然而其中的键值不要求必须是唯一的（即可以有重复）。 C++ STL中标准关联容器set, multiset, map, multimap内部采用的就是一种非常高效的平衡检索二叉树：红黑树，也成为RB树(Red-Black Tree)。RB树的统计性能要好于一般的平衡二叉树(有些书籍根据作者姓名，Adelson-Velskii和Landis，将其称为AVL-树)，所以被STL选择作为了关联容器的内部结构。","link":"/2020/12/22/%E9%9D%A2%E8%AF%95%E7%9F%A5%E8%AF%86%E7%B4%A2%E5%BC%95-C/"}],"tags":[{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"面试","slug":"面试","link":"/tags/%E9%9D%A2%E8%AF%95/"},{"name":"数据结构","slug":"数据结构","link":"/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"}],"categories":[{"name":"随想","slug":"随想","link":"/categories/%E9%9A%8F%E6%83%B3/"},{"name":"编程语言","slug":"编程语言","link":"/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"},{"name":"生产","slug":"生产","link":"/categories/%E7%94%9F%E4%BA%A7/"},{"name":"招聘","slug":"招聘","link":"/categories/%E6%8B%9B%E8%81%98/"}]}